<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title> Video Zone</title>
<meta name="author" content="Ashley Van Steenacker"/>
<meta name="description" content="Wat zijn slimme meters? wat zijn smart grids? Kom het te weten op deze site"/>
<meta name="keywords" content="smart grid ready, smart grid flanders, smart grid nederland, smart grids nederland, wat is smart grid,
smartgrids, hernieuwbare energiebronnen, slimme energie, hernieuwbare"/>
<link href="assets/css/main.css" rel="stylesheet">
<style>
    table, td, th {
    border: 0px ;
            background-color: #fcfcfc;
    border-collapse: collapse;
            border-radius: 10px;

}
dt, td, th {
    text-align: center;
}    
</style>

</head>
<body>
  
 
    
<!-- Navigation -->    
<ul id="navigation">
<li ><a id="navbar" href="./">Home</a></li>
<li><a id="navbar"href="./rationeler_energiegebruik.htm" >Rationeler energiegebruik</a></li>
<li><a id="navbar"href="./decentrale_productie.htm">Decentrale productie</a></li>
<li><a  id="navbar"href="./Smart-Grid.htm">Smart grids</a></li>    
<li><a id="navbar"href="./Slimme_Meters.htm">Slimme meters</a></li>
<li><a id="navbar"href="./Super_en_microgrids.htm">Super en microgrids</a></li>
<li><a id="navbar"href="./Energie_Oplsag.htm">Energie opslag</a></li>
<li><a id="navbar"href="./definities.htm">Definities</a></li>
</ul>
<!--End  Navigation -->
    
<div class="main content">
<div class="content-head">
    <!--- Video venster 1 ---->
<h1 class="title">Video Zone</h1>     
<br>        
<table>
<tr>
<td><h2>Aansluiten windpark Noordoostpolder</h2> </td>  
</tr> 
<tr>
<td> 
<div id="player1"></div></td>
</tr>
<tr>
<td>In de Noordoostpolder wordt een aantal windparken gebouwd in en langs het IJsselmeer. Daarnaast is de woonkern Luttelgeest aangewezen voor de ontwikkeling van grootschalige tuinbouw en is ten oosten van IJsselmuiden een tuindergebied in ontwikkeling. Aan de kassen van deze tuinders zijn meestal warmtekracht centrales gekoppeld die elektriciteit aan het net leveren. Al deze elektriciteit wordt op het hoogspanningsnet in Nederland ingevoed. TenneT maakt het net in de regio hiervoor geschikt.</td>   
</tr>
</table>              
<br>
<br>
  
<!--- Video venster 2 ---->    
<table>
<tr>
<td><h2>What's inside a wind turbine?</h2>    
</td>    
</tr> 
<tr>
<td> <div id="player2"></div></td>
</tr>
<tr>
<td>An overview of the layout of utility-class wind turbine generators - where are the major components, what do they do, and what differences can be found between models and size ranges.    
</td>
</tr>
</table>        
        

       </div>     
    <footer>
    <p>CC-BY-SA 2015 <a href="https://ashleyslab.co/"> Ashley Van Steenacker</a> | <a href="http://www.devoorstad.be/"> De Voorstad</a></p>
</footer>
</body>
    
     <!--- Auth info ---->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Person",
  "name" : "Ashley Van Steenacker",
  "url" : "http://smartgrid.ashleyslab.co",
  "sameAs" : [
    "https://www.facebook.com/ashley.vansteenacker",
    "http://instagram.com/ashleeyloveapple",
    "https://plus.google.com/+AshleyVanSteenacker"
  ]
}
</script> 
     <!--- Youtube API ---->
<script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

     
      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>    
    
<script>
  var player;
  var player2;
  function onYouTubePlayerAPIReady() {
    player = new YT.Player('player1', {
      height: '390',
      width: '880',
      videoId: 'eJ35vOJLVHQ'
    });
    player2 = new YT.Player('player2', {
      height: '390',
      width: '880',
      videoId: 'LNXTm7aHvWc'
    });
  }
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76538503-3', 'auto');
  ga('send', 'pageview');

</script>

</html>
